name: Frontend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'sic_app/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'sic_app/**'
      - '.github/workflows/frontend-ci.yml'

env:
  NODE_VERSION: '18'

defaults:
  run:
    working-directory: ./sic_app

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: sic_app/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint (linting)
      run: npm run lint || echo "⚠️ ESLint configuration migration in progress"
      continue-on-error: true

    - name: Run Prettier (formatting check)
      run: npm run format:check

    - name: Run TypeScript type checking
      run: npm run type-check

    - name: Run Vitest (unit tests)
      run: npm run test:coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./sic_app/coverage/coverage-final.json
        flags: frontend
        name: frontend-coverage
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Build application
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: sic_app/dist/

  e2e-tests:
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: sic_app/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps

    - name: Build application
      run: npm run build

    - name: Run Playwright E2E tests
      run: npm run e2e

    - name: Upload Playwright report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: sic_app/playwright-report/