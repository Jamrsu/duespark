{
  "openapi": "3.1.0",
  "info": {
    "title": "DueSpark API",
    "description": "\nDueSpark is a comprehensive invoice management platform with automated payment reminders.\n\n## Features\n\n- **User Management**: Registration, authentication, and profile management\n- **Client Management**: Organize and track your clients\n- **Invoice Management**: Create, track, and manage invoices with multiple statuses\n- **Automated Reminders**: Schedule and send payment reminders via email\n- **Payment Tracking**: Monitor payment status and history\n- **Analytics**: Track performance metrics and payment patterns\n- **Integrations**: Connect with Stripe for payment processing\n- **Subscription Management**: Handle billing and subscription tiers\n\n## Authentication\n\nDueSpark uses JWT (JSON Web Token) authentication. Include the token in the Authorization header:\n\n```\nAuthorization: Bearer <your-jwt-token>\n```\n\n## Rate Limiting\n\nAPI requests are rate limited. Check response headers for current limits:\n- `X-RateLimit-Limit`: Request limit per window\n- `X-RateLimit-Remaining`: Requests remaining in current window\n- `X-RateLimit-Reset`: Time when the window resets\n\n## Webhooks\n\nDueSpark supports webhooks for real-time notifications:\n- Email delivery events (delivered, opened, clicked, bounced)\n- Payment status changes\n- Invoice updates\n\n## SDKs and Libraries\n\n- **JavaScript/TypeScript**: Official SDK available\n- **Python**: Community SDK available\n- **curl**: Examples provided in documentation\n",
    "version": "1.0.0",
    "contact": {
      "name": "DueSpark Support",
      "email": "support@duespark.com",
      "url": "https://duespark.com/support"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "paths": {
    "/api/subscription/info": {
      "get": {
        "tags": [
          "subscription"
        ],
        "summary": "Get Subscription Info",
        "operationId": "get_subscription_info_api_subscription_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/subscription/upgrade": {
      "post": {
        "tags": [
          "subscription"
        ],
        "summary": "Upgrade Subscription",
        "operationId": "upgrade_subscription_api_subscription_upgrade_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpgradePlanRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/subscription/billing-portal": {
      "post": {
        "tags": [
          "subscription"
        ],
        "summary": "Create Billing Portal Session",
        "operationId": "create_billing_portal_session_api_subscription_billing_portal_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/subscription/apply-coupon": {
      "post": {
        "tags": [
          "subscription"
        ],
        "summary": "Apply Coupon",
        "operationId": "apply_coupon_api_subscription_apply_coupon_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyCouponRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/subscription/pause": {
      "post": {
        "tags": [
          "subscription"
        ],
        "summary": "Pause Subscription",
        "operationId": "pause_subscription_api_subscription_pause_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/subscription/resume": {
      "post": {
        "tags": [
          "subscription"
        ],
        "summary": "Resume Subscription",
        "operationId": "resume_subscription_api_subscription_resume_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/subscription/billing-preview/{tier}": {
      "get": {
        "tags": [
          "subscription"
        ],
        "summary": "Get Billing Preview",
        "description": "Get a preview of billing costs with credits applied",
        "operationId": "get_billing_preview_api_subscription_billing_preview__tier__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tier",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SubscriptionTier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/subscription/usage": {
      "get": {
        "tags": [
          "subscription"
        ],
        "summary": "Get Usage Summary",
        "description": "Get comprehensive usage summary for the current user",
        "operationId": "get_usage_summary_api_subscription_usage_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/subscription/tiers": {
      "get": {
        "tags": [
          "subscription"
        ],
        "summary": "Get Tier Comparison",
        "description": "Get comparison of all subscription tiers (public endpoint)",
        "operationId": "get_tier_comparison_api_subscription_tiers_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/subscription/upgrade-tier/{tier}": {
      "post": {
        "tags": [
          "subscription"
        ],
        "summary": "Upgrade Subscription Tier",
        "description": "Upgrade user's subscription to a new tier (direct upgrade)",
        "operationId": "upgrade_subscription_tier_api_subscription_upgrade_tier__tier__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tier",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SubscriptionTier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/subscription/limits/check": {
      "get": {
        "tags": [
          "subscription"
        ],
        "summary": "Check Limits",
        "description": "Check current usage limits for clients and invoices",
        "operationId": "check_limits_api_subscription_limits_check_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/subscription/features/{feature}/check": {
      "get": {
        "tags": [
          "subscription"
        ],
        "summary": "Check Feature Access",
        "description": "Check if user has access to a specific feature",
        "operationId": "check_feature_access_api_subscription_features__feature__check_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "feature",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feature"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/subscription/suggestions": {
      "get": {
        "tags": [
          "subscription"
        ],
        "summary": "Get Upgrade Suggestions",
        "description": "Get personalized upgrade suggestions based on usage patterns",
        "operationId": "get_upgrade_suggestions_api_subscription_suggestions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/subscription/status": {
      "get": {
        "tags": [
          "subscription"
        ],
        "summary": "Get Subscription Status",
        "description": "Get current subscription status and basic info",
        "operationId": "get_subscription_status_api_subscription_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/webhooks/stripe": {
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Stripe Webhook",
        "operationId": "stripe_webhook_api_webhooks_stripe_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/referrals/my-code": {
      "get": {
        "tags": [
          "referrals"
        ],
        "summary": "Get My Referral Code",
        "description": "Get current user's referral code",
        "operationId": "get_my_referral_code_api_referrals_my_code_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/referrals/validate": {
      "post": {
        "tags": [
          "referrals"
        ],
        "summary": "Validate Referral Code",
        "description": "Validate a referral code (for new user registration)",
        "operationId": "validate_referral_code_api_referrals_validate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateReferralRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Validate Referral Code Api Referrals Validate Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/referrals/stats": {
      "get": {
        "tags": [
          "referrals"
        ],
        "summary": "Get Referral Stats",
        "description": "Get user's referral statistics",
        "operationId": "get_referral_stats_api_referrals_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/referrals/credits": {
      "get": {
        "tags": [
          "referrals"
        ],
        "summary": "Get Credits Breakdown",
        "description": "Get user's subscription credits breakdown",
        "operationId": "get_credits_breakdown_api_referrals_credits_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/referrals/admin/grant-credit": {
      "post": {
        "tags": [
          "referrals"
        ],
        "summary": "Admin Grant Credit",
        "description": "Admin endpoint to grant credits to a user",
        "operationId": "admin_grant_credit_api_referrals_admin_grant_credit_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminGrantCreditRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/referrals/admin/revoke-referral": {
      "post": {
        "tags": [
          "referrals"
        ],
        "summary": "Admin Revoke Referral",
        "description": "Admin endpoint to revoke a referral reward",
        "operationId": "admin_revoke_referral_api_referrals_admin_revoke_referral_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminRevokeReferralRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/referrals/admin/process-pending": {
      "post": {
        "tags": [
          "referrals"
        ],
        "summary": "Admin Process Pending Rewards",
        "description": "Admin endpoint to manually process pending referral rewards",
        "operationId": "admin_process_pending_rewards_api_referrals_admin_process_pending_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/growth/dashboard": {
      "get": {
        "tags": [
          "viral-growth"
        ],
        "summary": "Get Viral Dashboard",
        "description": "Get comprehensive viral growth dashboard data",
        "operationId": "get_viral_dashboard_api_growth_dashboard_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/growth/stats": {
      "get": {
        "tags": [
          "viral-growth"
        ],
        "summary": "Get Growth Stats",
        "description": "Get user's growth statistics",
        "operationId": "get_growth_stats_api_growth_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/growth/share/generate": {
      "post": {
        "tags": [
          "viral-growth"
        ],
        "summary": "Generate Share Content",
        "description": "Generate social sharing content for different platforms",
        "operationId": "generate_share_content_api_growth_share_generate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShareContentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/growth/share/templates": {
      "get": {
        "tags": [
          "viral-growth"
        ],
        "summary": "Get Share Templates",
        "description": "Get all available sharing templates",
        "operationId": "get_share_templates_api_growth_share_templates_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/growth/team/invite": {
      "post": {
        "tags": [
          "viral-growth"
        ],
        "summary": "Create Team Invitation",
        "description": "Create team invitation with viral mechanics",
        "operationId": "create_team_invitation_api_growth_team_invite_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamInvitationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/growth/milestones": {
      "get": {
        "tags": [
          "viral-growth"
        ],
        "summary": "Get Milestones",
        "description": "Get user's milestone progress and achievements",
        "operationId": "get_milestones_api_growth_milestones_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/growth/leaderboard": {
      "get": {
        "tags": [
          "viral-growth"
        ],
        "summary": "Get Leaderboard",
        "description": "Get referral leaderboard",
        "operationId": "get_leaderboard_api_growth_leaderboard_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/growth/opportunities": {
      "get": {
        "tags": [
          "viral-growth"
        ],
        "summary": "Get Growth Opportunities",
        "description": "Get personalized growth opportunities",
        "operationId": "get_growth_opportunities_api_growth_opportunities_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/growth/share/track": {
      "post": {
        "tags": [
          "viral-growth"
        ],
        "summary": "Track Share Action",
        "description": "Track sharing actions for analytics",
        "operationId": "track_share_action_api_growth_share_track_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShareTrackingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/growth/campaigns": {
      "get": {
        "tags": [
          "viral-growth"
        ],
        "summary": "Get Viral Campaigns",
        "description": "Get available viral growth campaigns",
        "operationId": "get_viral_campaigns_api_growth_campaigns_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/growth/success-stories": {
      "get": {
        "tags": [
          "viral-growth"
        ],
        "summary": "Get Success Stories",
        "description": "Get viral growth success stories for inspiration",
        "operationId": "get_success_stories_api_growth_success_stories_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/client-portal/access": {
      "post": {
        "tags": [
          "client-portal"
        ],
        "summary": "Request Client Access",
        "description": "Generate access token for client portal (public endpoint)",
        "operationId": "request_client_access_api_client_portal_access_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientAccessRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/client-portal/portal/{access_token}": {
      "get": {
        "tags": [
          "client-portal"
        ],
        "summary": "Get Client Portal",
        "description": "Get client portal dashboard (public endpoint)",
        "operationId": "get_client_portal_api_client_portal_portal__access_token__get",
        "parameters": [
          {
            "name": "access_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Access Token"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email",
              "description": "Client email for verification",
              "title": "Email"
            },
            "description": "Client email for verification"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/client-portal/invoice/{invoice_id}/payment": {
      "get": {
        "tags": [
          "client-portal"
        ],
        "summary": "Get Invoice Payment Page",
        "description": "Get branded payment page for specific invoice (public endpoint)",
        "operationId": "get_invoice_payment_page_api_client_portal_invoice__invoice_id__payment_get",
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Invoice Id"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client access token",
              "title": "Access Token"
            },
            "description": "Client access token"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/client-portal/invoice/{invoice_id}/pay": {
      "post": {
        "tags": [
          "client-portal"
        ],
        "summary": "Process Invoice Payment",
        "description": "Process payment for invoice (public endpoint)",
        "operationId": "process_invoice_payment_api_client_portal_invoice__invoice_id__pay_post",
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Invoice Id"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client access token",
              "title": "Access Token"
            },
            "description": "Client access token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/client-portal/message": {
      "post": {
        "tags": [
          "client-portal"
        ],
        "summary": "Send Client Message",
        "description": "Send message from client to vendor (public endpoint)",
        "operationId": "send_client_message_api_client_portal_message_post",
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client access token",
              "title": "Access Token"
            },
            "description": "Client access token"
          },
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email",
              "description": "Client email",
              "title": "Email"
            },
            "description": "Client email"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientMessageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/client-portal/communication/{access_token}": {
      "get": {
        "tags": [
          "client-portal"
        ],
        "summary": "Get Communication History",
        "description": "Get communication history between client and vendor (public endpoint)",
        "operationId": "get_communication_history_api_client_portal_communication__access_token__get",
        "parameters": [
          {
            "name": "access_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Access Token"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email",
              "description": "Client email",
              "title": "Email"
            },
            "description": "Client email"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/client-portal/feedback": {
      "post": {
        "tags": [
          "client-portal"
        ],
        "summary": "Submit Client Feedback",
        "description": "Submit client feedback and testimonial (public endpoint)",
        "operationId": "submit_client_feedback_api_client_portal_feedback_post",
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client access token",
              "title": "Access Token"
            },
            "description": "Client access token"
          },
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email",
              "description": "Client email",
              "title": "Email"
            },
            "description": "Client email"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientFeedbackRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/client-portal/receipt/{payment_id}": {
      "get": {
        "tags": [
          "client-portal"
        ],
        "summary": "Get Payment Receipt",
        "description": "Get payment receipt (public endpoint)",
        "operationId": "get_payment_receipt_api_client_portal_receipt__payment_id__get",
        "parameters": [
          {
            "name": "payment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Payment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/client-portal/health": {
      "get": {
        "tags": [
          "client-portal"
        ],
        "summary": "Client Portal Health",
        "description": "Health check for client portal (public endpoint)",
        "operationId": "client_portal_health_api_client_portal_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/client-portal/demo": {
      "get": {
        "tags": [
          "client-portal"
        ],
        "summary": "Get Demo Portal",
        "description": "Get demo client portal for showcasing (public endpoint)",
        "operationId": "get_demo_portal_api_client_portal_demo_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/integrations/": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Get User Integrations",
        "description": "Get all available integrations for user based on subscription tier",
        "operationId": "get_user_integrations_api_integrations__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/integrations/stripe/connect": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Initiate Stripe Connect",
        "description": "Initiate Stripe Connect onboarding process",
        "operationId": "initiate_stripe_connect_api_integrations_stripe_connect_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/integrations/quickbooks/setup": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Setup Quickbooks Integration",
        "description": "Setup QuickBooks Online integration",
        "operationId": "setup_quickbooks_integration_api_integrations_quickbooks_setup_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/integrations/xero/setup": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Setup Xero Integration",
        "description": "Setup Xero accounting integration",
        "operationId": "setup_xero_integration_api_integrations_xero_setup_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/integrations/zapier/setup": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Setup Zapier Integration",
        "description": "Setup Zapier integration for workflow automation",
        "operationId": "setup_zapier_integration_api_integrations_zapier_setup_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/integrations/webhooks/setup": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Setup Webhook Endpoints",
        "description": "Setup custom webhook endpoints",
        "operationId": "setup_webhook_endpoints_api_integrations_webhooks_setup_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookSetupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/integrations/sync": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Sync Invoice To Accounting",
        "description": "Manually sync invoice to accounting system",
        "operationId": "sync_invoice_to_accounting_api_integrations_sync_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/integrations/analytics": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Get Integration Analytics",
        "description": "Get analytics and usage data for user's integrations",
        "operationId": "get_integration_analytics_api_integrations_analytics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/integrations/callback/{integration_type}": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Handle Integration Callback",
        "description": "Handle OAuth callbacks from integration providers",
        "operationId": "handle_integration_callback_api_integrations_callback__integration_type__post",
        "parameters": [
          {
            "name": "integration_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Integration Type"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationCallbackRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/integrations/{integration_type}": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "summary": "Disconnect Integration",
        "description": "Disconnect an integration",
        "operationId": "disconnect_integration_api_integrations__integration_type__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "integration_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Integration Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/integrations/marketplace": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Get Integration Marketplace",
        "description": "Get integration marketplace with available integrations",
        "operationId": "get_integration_marketplace_api_integrations_marketplace_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/integrations/health": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Integration Health",
        "description": "Health check for integration services",
        "operationId": "integration_health_api_integrations_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/analytics/dashboard": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Analytics Dashboard",
        "description": "Get comprehensive analytics dashboard",
        "operationId": "get_analytics_dashboard_api_analytics_dashboard_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Analysis period: 7d, 30d, 90d, 1y",
              "default": "30d",
              "title": "Period"
            },
            "description": "Analysis period: 7d, 30d, 90d, 1y"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/insights/clients": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Client Insights",
        "description": "Get detailed insights for user's clients",
        "operationId": "get_client_insights_api_analytics_insights_clients_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "description": "Number of clients to analyze",
              "default": 10,
              "title": "Limit"
            },
            "description": "Number of clients to analyze"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/predictions/cashflow": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Cash Flow Prediction",
        "description": "Get AI-powered cash flow predictions",
        "operationId": "get_cash_flow_prediction_api_analytics_predictions_cashflow_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days_ahead",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "description": "Days to predict ahead",
              "default": 30,
              "title": "Days Ahead"
            },
            "description": "Days to predict ahead"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/recommendations": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Ai Recommendations",
        "description": "Get AI-powered business recommendations",
        "operationId": "get_ai_recommendations_api_analytics_recommendations_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by recommendation category",
              "title": "Category"
            },
            "description": "Filter by recommendation category"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/performance": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Performance Metrics",
        "description": "Get detailed performance and efficiency metrics",
        "operationId": "get_performance_metrics_api_analytics_performance_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/analytics/track": {
      "post": {
        "tags": [
          "analytics"
        ],
        "summary": "Track Feature Usage",
        "description": "Track feature usage for analytics",
        "operationId": "track_feature_usage_api_analytics_track_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeatureUsageEvent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/analytics/exports/csv": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Export Analytics Csv",
        "description": "Export analytics data as CSV",
        "operationId": "export_analytics_csv_api_analytics_exports_csv_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Export period: 7d, 30d, 90d, 1y",
              "default": "30d",
              "title": "Period"
            },
            "description": "Export period: 7d, 30d, 90d, 1y"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/trends": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Trend Analysis",
        "description": "Get trend analysis for key business metrics",
        "operationId": "get_trend_analysis_api_analytics_trends_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "metric",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Metric to analyze: revenue, invoices, clients",
              "default": "revenue",
              "title": "Metric"
            },
            "description": "Metric to analyze: revenue, invoices, clients"
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Period for trend analysis: 3m, 6m, 1y",
              "default": "6m",
              "title": "Period"
            },
            "description": "Period for trend analysis: 3m, 6m, 1y"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/health": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Analytics Health",
        "description": "Health check for analytics service",
        "operationId": "analytics_health_api_analytics_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Register",
        "operationId": "register_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login",
        "operationId": "login_auth_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_auth_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/clients": {
      "get": {
        "tags": [
          "clients"
        ],
        "summary": "List Clients",
        "operationId": "list_clients_clients_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "clients"
        ],
        "summary": "Create Client",
        "operationId": "create_client_clients_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/clients/{client_id}": {
      "get": {
        "tags": [
          "clients"
        ],
        "summary": "Get Client",
        "operationId": "get_client_clients__client_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Client Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "clients"
        ],
        "summary": "Update Client",
        "operationId": "update_client_clients__client_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Client Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "clients"
        ],
        "summary": "Delete Client",
        "operationId": "delete_client_clients__client_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Client Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/invoices": {
      "get": {
        "tags": [
          "invoices"
        ],
        "summary": "List Invoices",
        "operationId": "list_invoices_invoices_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "client_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Client Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "invoices"
        ],
        "summary": "Create Invoice",
        "operationId": "create_invoice_invoices_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{invoice_id}": {
      "get": {
        "tags": [
          "invoices"
        ],
        "summary": "Get Invoice",
        "operationId": "get_invoice_invoices__invoice_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Invoice Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "invoices"
        ],
        "summary": "Update Invoice",
        "operationId": "update_invoice_invoices__invoice_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Invoice Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "invoices"
        ],
        "summary": "Delete Invoice",
        "operationId": "delete_invoice_invoices__invoice_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Invoice Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/reminders": {
      "get": {
        "tags": [
          "reminders"
        ],
        "summary": "List Reminders",
        "operationId": "list_reminders_reminders_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "reminders"
        ],
        "summary": "Create Reminder",
        "operationId": "create_reminder_reminders_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReminderCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/reminders/{reminder_id}": {
      "get": {
        "tags": [
          "reminders"
        ],
        "summary": "Get Reminder",
        "operationId": "get_reminder_reminders__reminder_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "reminder_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Reminder Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "reminders"
        ],
        "summary": "Update Reminder",
        "operationId": "update_reminder_reminders__reminder_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "reminder_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Reminder Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReminderUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "reminders"
        ],
        "summary": "Delete Reminder",
        "operationId": "delete_reminder_reminders__reminder_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "reminder_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Reminder Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/summary": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get analytics summary",
        "description": "Retrieve comprehensive analytics summary including:\n    - Invoice counts by status (draft, pending, paid, overdue, cancelled)\n    - Expected payments in next 30 days \n    - Average days to pay for paid invoices\n    - Top 5 late-paying clients with average lateness\n    \n    Returns aggregated metrics for the authenticated user's invoices.",
        "operationId": "analytics_summary_analytics_summary_get",
        "responses": {
          "200": {
            "description": "Successful response with analytics summary",
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "data": {
                    "totals": {
                      "all": 25,
                      "draft": 3,
                      "pending": 8,
                      "paid": 12,
                      "overdue": 2,
                      "cancelled": 0
                    },
                    "expected_payments_next_30d": 150000,
                    "avg_days_to_pay": 5.2,
                    "top_late_clients": [
                      {
                        "client_id": 1,
                        "client_name": "Acme Corp",
                        "client_email": "billing@acme.com",
                        "avg_days_late": 12.5,
                        "overdue_count": 2,
                        "total_overdue_amount_cents": 50000
                      }
                    ]
                  },
                  "meta": {
                    "generated_at": "2024-01-15T10:30:00Z",
                    "currency": "USD",
                    "window_days": 30,
                    "notes": "Expected = pending/overdue invoices with due_date in next 30 days"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/analytics/timeseries": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get analytics timeseries data",
        "description": "Retrieve time-series analytics data for various metrics over specified intervals.\n    \n    **Available Metrics:**\n    - `payments`: Invoices that were marked as paid (uses paid_at date)\n    - `invoices_created`: New invoices created (uses created_at date) \n    - `invoices_paid`: Invoices that changed to paid status (uses paid_at date)\n    - `revenue`: Total monetary value of paid invoices (uses paid_at date)\n    \n    **Time Intervals:**\n    - `day`: Daily aggregation (last 12 days by default)\n    - `week`: Weekly aggregation (last 12 weeks by default) \n    - `month`: Monthly aggregation (last 12 months by default)\n    \n    **Date Range:**\n    - Without date parameters: Returns last 12 periods based on interval\n    - With custom dates: Returns data within specified date range\n    - Date format: ISO 8601 (e.g., '2024-01-01T00:00:00Z')\n    \n    **Response includes:**\n    - Time series data points with period, count, and value\n    - Total aggregated count and value across all periods\n    - Metadata with effective date range and timezone info",
        "operationId": "analytics_timeseries_analytics_timeseries_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "metric",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(payments|invoices_created|invoices_paid|revenue)$",
              "description": "Metric to analyze",
              "examples": {
                "payments": {
                  "value": "payments"
                }
              },
              "default": "payments",
              "title": "Metric"
            },
            "description": "Metric to analyze"
          },
          {
            "name": "interval",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(day|week|month)$",
              "description": "Time interval for aggregation",
              "examples": {
                "week": {
                  "value": "week"
                }
              },
              "default": "week",
              "title": "Interval"
            },
            "description": "Time interval for aggregation"
          },
          {
            "name": "from_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[+-]\\d{2}:\\d{2})$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for custom date range (ISO 8601 format). If not provided, defaults to 12 periods ago based on interval.",
              "examples": {
                "iso_date": {
                  "value": "2024-01-01T00:00:00Z"
                }
              },
              "title": "From Date"
            },
            "description": "Start date for custom date range (ISO 8601 format). If not provided, defaults to 12 periods ago based on interval."
          },
          {
            "name": "to_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[+-]\\d{2}:\\d{2})$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for custom date range (ISO 8601 format). If not provided, defaults to current time. Must be greater than or equal to from_date.",
              "examples": {
                "iso_date": {
                  "value": "2024-12-31T23:59:59Z"
                }
              },
              "title": "To Date"
            },
            "description": "End date for custom date range (ISO 8601 format). If not provided, defaults to current time. Must be greater than or equal to from_date."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with timeseries data",
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "data": {
                    "metric": "payments",
                    "interval": "week",
                    "points": [
                      {
                        "period": "2024-01-01T00:00:00+00:00",
                        "value": 125000.0,
                        "count": 3
                      },
                      {
                        "period": "2024-01-08T00:00:00+00:00",
                        "value": 87500.0,
                        "count": 2
                      }
                    ],
                    "total_value": 212500.0,
                    "total_count": 5
                  },
                  "meta": {
                    "metric": "payments",
                    "interval": "week",
                    "from": "2024-01-01",
                    "to": "2024-01-31",
                    "timezone": "UTC",
                    "series_len": 2
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters",
            "content": {
              "application/json": {
                "examples": {
                  "invalid_metric": {
                    "summary": "Invalid metric parameter",
                    "value": {
                      "error": {
                        "code": 400,
                        "message": "Invalid metric. Must be one of: ['payments', 'invoices_created', 'invoices_paid', 'revenue']",
                        "type": "http_error"
                      },
                      "success": false
                    }
                  },
                  "invalid_date_range": {
                    "summary": "Invalid date range",
                    "value": {
                      "error": {
                        "code": 400,
                        "message": "from_date must be less than or equal to to_date",
                        "type": "http_error"
                      },
                      "success": false
                    }
                  },
                  "invalid_date_format": {
                    "summary": "Invalid date format",
                    "value": {
                      "error": {
                        "code": 400,
                        "message": "Invalid from_date format. Use ISO 8601 format (e.g., '2024-01-01T00:00:00Z')",
                        "type": "http_error"
                      },
                      "success": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/templates": {
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "List Templates",
        "operationId": "list_templates_templates_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "templates"
        ],
        "summary": "Create Template",
        "operationId": "create_template_templates_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/templates/{template_id}": {
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "Get Template",
        "operationId": "get_template_templates__template_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "templates"
        ],
        "summary": "Update Template",
        "operationId": "update_template_templates__template_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "templates"
        ],
        "summary": "Delete Template",
        "operationId": "delete_template_templates__template_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/events": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "List Events",
        "operationId": "list_events_events_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "events"
        ],
        "summary": "Create Event",
        "description": "Create a new event for tracking user actions",
        "operationId": "create_event_events_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Get Current User Profile",
        "description": "Get current user profile including onboarding status",
        "operationId": "get_current_user_profile_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "auth"
        ],
        "summary": "Update User Profile Put",
        "description": "Update current user profile including onboarding status (PUT version for CORS compatibility)",
        "operationId": "update_user_profile_put_auth_me_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Update Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "auth"
        ],
        "summary": "Update User Profile",
        "description": "Update current user profile including onboarding status",
        "operationId": "update_user_profile_auth_me_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Update Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/auth/send-verification": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Send Verification Email",
        "description": "Send email verification email",
        "operationId": "send_verification_email_auth_send_verification_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/onboarding/sample-data": {
      "post": {
        "tags": [
          "onboarding"
        ],
        "summary": "Create Sample Data",
        "description": "Create sample clients and invoices for demo purposes",
        "operationId": "create_sample_data_onboarding_sample_data_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/reminders/preview": {
      "post": {
        "tags": [
          "reminders"
        ],
        "summary": "Reminder Preview",
        "operationId": "reminder_preview_reminders_preview_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReminderPreviewRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/reminders/send-now": {
      "post": {
        "tags": [
          "reminders"
        ],
        "summary": "Reminders Send Now",
        "operationId": "reminders_send_now_reminders_send_now_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReminderSendNowRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/integrations/stripe/connect": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Stripe Connect Start",
        "operationId": "stripe_connect_start_integrations_stripe_connect_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/integrations/stripe/status": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Stripe Connect Status",
        "operationId": "stripe_connect_status_integrations_stripe_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/integrations/stripe/callback": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Stripe Connect Callback",
        "operationId": "stripe_connect_callback_integrations_stripe_callback_get",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Code"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "State"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/webhooks/stripe": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Stripe Webhook",
        "operationId": "stripe_webhook_webhooks_stripe_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/integrations/stripe/payment_link": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Create Payment Link",
        "operationId": "create_payment_link_integrations_stripe_payment_link_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Invoice Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/integrations/stripe/disconnect": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Stripe Disconnect",
        "operationId": "stripe_disconnect_integrations_stripe_disconnect_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/integrations/stripe/import-invoices": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Stripe Import Invoices",
        "operationId": "stripe_import_invoices_integrations_stripe_import_invoices_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Since"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/dead_letters": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List Dead Letters",
        "operationId": "list_dead_letters_admin_dead_letters_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "after_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "After Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/dead_letters/{dl_id}/retry": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Retry Dead Letter",
        "operationId": "retry_dead_letter_admin_dead_letters__dl_id__retry_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "dl_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dl Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/dead_letters/{dl_id}": {
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Delete Dead Letter",
        "operationId": "delete_dead_letter_admin_dead_letters__dl_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "dl_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dl Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/reminders/requeue-failed": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Requeue Failed Reminders",
        "operationId": "requeue_failed_reminders_admin_reminders_requeue_failed_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/outbox": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List Outbox",
        "operationId": "list_outbox_admin_outbox_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "after_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "After Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/outbox/{outbox_id}/retry": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Retry Outbox",
        "operationId": "retry_outbox_admin_outbox__outbox_id__retry_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "outbox_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Outbox Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/scheduler/requeue": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Admin Requeue Scheduler",
        "operationId": "admin_requeue_scheduler_admin_scheduler_requeue_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Payload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/admin/scheduler/run-adaptive": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Admin Run Adaptive",
        "operationId": "admin_run_adaptive_admin_scheduler_run_adaptive_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Payload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AdminGrantCreditRequest": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "months": {
            "type": "integer",
            "title": "Months"
          },
          "description": {
            "type": "string",
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "months",
          "description"
        ],
        "title": "AdminGrantCreditRequest"
      },
      "AdminRevokeReferralRequest": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "reason"
        ],
        "title": "AdminRevokeReferralRequest"
      },
      "ApplyCouponRequest": {
        "properties": {
          "coupon_id": {
            "type": "string",
            "title": "Coupon Id"
          }
        },
        "type": "object",
        "required": [
          "coupon_id"
        ],
        "title": "ApplyCouponRequest"
      },
      "Body_login_auth_login_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "password"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_login_auth_login_post"
      },
      "ClientAccessRequest": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "invoice_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Number"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "ClientAccessRequest"
      },
      "ClientCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "timezone": {
            "type": "string",
            "title": "Timezone",
            "default": "UTC"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "name",
          "email"
        ],
        "title": "ClientCreate"
      },
      "ClientFeedbackRequest": {
        "properties": {
          "rating": {
            "type": "integer",
            "title": "Rating"
          },
          "feedback": {
            "type": "string",
            "title": "Feedback"
          },
          "public_testimonial": {
            "type": "boolean",
            "title": "Public Testimonial",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "rating",
          "feedback"
        ],
        "title": "ClientFeedbackRequest"
      },
      "ClientMessageRequest": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "invoice_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Id"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "ClientMessageRequest"
      },
      "ClientUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "ClientUpdate"
      },
      "EventCreate": {
        "properties": {
          "entity_type": {
            "type": "string",
            "title": "Entity Type"
          },
          "entity_id": {
            "type": "integer",
            "title": "Entity Id"
          },
          "event_type": {
            "type": "string",
            "title": "Event Type"
          },
          "payload": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payload"
          }
        },
        "type": "object",
        "required": [
          "entity_type",
          "entity_id",
          "event_type"
        ],
        "title": "EventCreate"
      },
      "FeatureUsageEvent": {
        "properties": {
          "feature": {
            "type": "string",
            "title": "Feature"
          },
          "action": {
            "type": "string",
            "title": "Action"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "feature",
          "action"
        ],
        "title": "FeatureUsageEvent"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "IntegrationCallbackRequest": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          },
          "state": {
            "type": "string",
            "title": "State"
          },
          "integration_type": {
            "type": "string",
            "title": "Integration Type"
          }
        },
        "type": "object",
        "required": [
          "code",
          "state",
          "integration_type"
        ],
        "title": "IntegrationCallbackRequest"
      },
      "InvoiceCreate": {
        "properties": {
          "client_id": {
            "type": "integer",
            "title": "Client Id"
          },
          "amount_cents": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Amount Cents"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "default": "USD"
          },
          "due_date": {
            "type": "string",
            "format": "date",
            "title": "Due Date"
          },
          "status": {
            "type": "string",
            "enum": [
              "draft",
              "pending",
              "paid",
              "overdue",
              "cancelled"
            ],
            "title": "Status",
            "default": "pending"
          },
          "external_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "External Id"
          },
          "source": {
            "type": "string",
            "title": "Source",
            "default": "manual"
          }
        },
        "type": "object",
        "required": [
          "client_id",
          "amount_cents",
          "due_date"
        ],
        "title": "InvoiceCreate"
      },
      "InvoiceUpdate": {
        "properties": {
          "client_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "amount_cents": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Amount Cents"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date"
          },
          "status": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "draft",
                  "pending",
                  "paid",
                  "overdue",
                  "cancelled"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "external_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "External Id"
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source"
          }
        },
        "type": "object",
        "title": "InvoiceUpdate"
      },
      "PaymentRequest": {
        "properties": {
          "payment_method": {
            "type": "string",
            "title": "Payment Method"
          },
          "card_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Card Token"
          },
          "billing_address": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Billing Address"
          }
        },
        "type": "object",
        "required": [
          "payment_method"
        ],
        "title": "PaymentRequest"
      },
      "ReminderCreate": {
        "properties": {
          "invoice_id": {
            "type": "integer",
            "title": "Invoice Id"
          },
          "send_at": {
            "type": "string",
            "format": "date-time",
            "title": "Send At"
          },
          "channel": {
            "type": "string",
            "enum": [
              "email",
              "sms",
              "whatsapp"
            ],
            "title": "Channel",
            "default": "email"
          },
          "subject": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject"
          },
          "body": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Body"
          }
        },
        "type": "object",
        "required": [
          "invoice_id",
          "send_at"
        ],
        "title": "ReminderCreate"
      },
      "ReminderPreviewRequest": {
        "properties": {
          "invoice_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Id"
          },
          "template_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Id"
          },
          "tone": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "friendly",
                  "neutral",
                  "firm"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Tone"
          },
          "template": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template"
          },
          "variables": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Variables"
          }
        },
        "type": "object",
        "title": "ReminderPreviewRequest"
      },
      "ReminderSendNowRequest": {
        "properties": {
          "reminder_id": {
            "type": "integer",
            "title": "Reminder Id"
          },
          "force": {
            "type": "boolean",
            "title": "Force",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "reminder_id"
        ],
        "title": "ReminderSendNowRequest"
      },
      "ReminderUpdate": {
        "properties": {
          "send_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Send At"
          },
          "channel": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "email",
                  "sms",
                  "whatsapp"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Channel"
          },
          "status": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "scheduled",
                  "sent",
                  "failed",
                  "cancelled"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "subject": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject"
          },
          "body": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Body"
          }
        },
        "type": "object",
        "title": "ReminderUpdate"
      },
      "ShareContentRequest": {
        "properties": {
          "platform": {
            "type": "string",
            "title": "Platform"
          },
          "template_type": {
            "type": "string",
            "title": "Template Type",
            "default": "default"
          },
          "custom_message": {
            "type": "string",
            "title": "Custom Message"
          },
          "success_amount": {
            "type": "number",
            "title": "Success Amount"
          }
        },
        "type": "object",
        "required": [
          "platform"
        ],
        "title": "ShareContentRequest"
      },
      "ShareTrackingRequest": {
        "properties": {
          "tracking_id": {
            "type": "string",
            "title": "Tracking Id"
          },
          "platform": {
            "type": "string",
            "title": "Platform"
          },
          "action": {
            "type": "string",
            "title": "Action"
          }
        },
        "type": "object",
        "required": [
          "tracking_id",
          "platform",
          "action"
        ],
        "title": "ShareTrackingRequest"
      },
      "SubscriptionTier": {
        "type": "string",
        "enum": [
          "freemium",
          "professional",
          "agency"
        ],
        "title": "SubscriptionTier"
      },
      "SyncRequest": {
        "properties": {
          "invoice_id": {
            "type": "integer",
            "title": "Invoice Id"
          },
          "integration_type": {
            "type": "string",
            "title": "Integration Type"
          }
        },
        "type": "object",
        "required": [
          "invoice_id",
          "integration_type"
        ],
        "title": "SyncRequest"
      },
      "TeamInvitationRequest": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "role": {
            "type": "string",
            "title": "Role",
            "default": "member"
          },
          "personal_message": {
            "type": "string",
            "title": "Personal Message"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "TeamInvitationRequest"
      },
      "TemplateCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "tone": {
            "type": "string",
            "enum": [
              "friendly",
              "neutral",
              "firm"
            ],
            "title": "Tone"
          },
          "subject": {
            "type": "string",
            "title": "Subject"
          },
          "body_markdown": {
            "type": "string",
            "title": "Body Markdown"
          }
        },
        "type": "object",
        "required": [
          "name",
          "tone",
          "subject",
          "body_markdown"
        ],
        "title": "TemplateCreate"
      },
      "TemplateUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "tone": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "friendly",
                  "neutral",
                  "firm"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Tone"
          },
          "subject": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject"
          },
          "body_markdown": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Body Markdown"
          }
        },
        "type": "object",
        "title": "TemplateUpdate"
      },
      "UpgradePlanRequest": {
        "properties": {
          "tier": {
            "$ref": "#/components/schemas/SubscriptionTier"
          }
        },
        "type": "object",
        "required": [
          "tier"
        ],
        "title": "UpgradePlanRequest"
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "title": "Password"
          },
          "referral_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Referral Code"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "UserCreate"
      },
      "ValidateReferralRequest": {
        "properties": {
          "referral_code": {
            "type": "string",
            "title": "Referral Code"
          }
        },
        "type": "object",
        "required": [
          "referral_code"
        ],
        "title": "ValidateReferralRequest"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "WebhookEndpoint": {
        "properties": {
          "url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Url"
          },
          "events": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Events"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "url",
          "events"
        ],
        "title": "WebhookEndpoint"
      },
      "WebhookSetupRequest": {
        "properties": {
          "endpoints": {
            "items": {
              "$ref": "#/components/schemas/WebhookEndpoint"
            },
            "type": "array",
            "title": "Endpoints"
          }
        },
        "type": "object",
        "required": [
          "endpoints"
        ],
        "title": "WebhookSetupRequest"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token obtained from `/auth/login` endpoint"
      }
    }
  },
  "tags": [
    {
      "name": "authentication",
      "description": "User authentication and authorization endpoints"
    },
    {
      "name": "analytics",
      "description": "Analytics and reporting endpoints providing insights into invoice data, payment metrics, and client behavior"
    },
    {
      "name": "clients",
      "description": "Client management operations"
    },
    {
      "name": "invoices",
      "description": "Invoice management and tracking"
    },
    {
      "name": "reminders",
      "description": "Payment reminder system"
    },
    {
      "name": "integrations",
      "description": "Third-party integrations (Stripe, etc.)"
    },
    {
      "name": "admin",
      "description": "Administrative operations and system management"
    },
    {
      "name": "enterprise",
      "description": "Phase 4: Enterprise multi-tenancy, AI intelligence, security, and advanced analytics"
    }
  ],
  "servers": [
    {
      "url": "https://api.duespark.com",
      "description": "Production server"
    },
    {
      "url": "https://staging-api.duespark.com",
      "description": "Staging server"
    },
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    }
  ]
}